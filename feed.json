{
    "version": "https://jsonfeed.org/version/1",
    "title": "Islandora 8 Overview",
    "description": "",
    "home_page_url": "https://donrichards.github.io/migrate_islandora_csv",
    "feed_url": "https://donrichards.github.io/migrate_islandora_csv/feed.json",
    "user_comment": "",
    "icon": "https://donrichards.github.io/migrate_islandora_csv/media/website/8.png",
    "author": {
        "name": "Don Richards"
    },
    "items": [
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/deployment-options.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/deployment-options.html",
            "title": "Deployment Options",
            "summary": "For self hosted soltutions there are 2 basic deployment options; Ansible(a style we’re currently using) or deploying through Docker images. All of these options can utilize a continous development (automated deployment) life cycle. ",
            "content_html": "<p>For self hosted soltutions there are 2 basic deployment options; Ansible(a style we’re currently using) or deploying through Docker images.</p>\n<ol>\n<li>Islandora’s <a href=\"https://github.com/Islandora-Devops/islandora-playbook\">Ansible playbook</a> comes with 2 preconfigured operating system defaults; Ubuntu 18.04 and CentOS/7. The deployment can be configured for a local VM or a production deployment. “Ansible is the simplest solution for configuration management available. It’s designed to be minimal in nature, consistent, secure and highly reliable, with an extremely low learning curve for administrators, developers and IT managers.” - [<a href=\"https://www.ansible.com/use-cases/configuration-management\">link</a>]</li>\n<li>ISLE Project facilitating creation and management of Islandora 8 Infrastructure with Docker (containerized server). This is the bleeding edge technology for deployent. This would require some infrastructure and training to prepare our staff for this option. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85332417-e999dd80-b4a5-11ea-9aa2-8d1a14f8655e.jpg\" data-is-external-image=\"true\"  alt=\"isle_prototype\" /></figure><ul>\n<li>Full deploy and integrate with continuous development on Github. </li>\n<li>[<a href=\"https://github.com/Islandora-Collaboration-Group/ISLE\">link</a>] <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://github.com/jesseduffield/lazydocker/raw/master/docs/resources/demo3.gif\" data-is-external-image=\"true\"  alt=\"Lazy Docker\" /></figure></li>\n</ul>\n</li>\n<li>The stack can also be a standard manual development and deployment. Although there is nothing technically wrong with this option, it is generally considered time comsuming to initially setup and generally considered realatively unnessisary. This has historically been Digital Initiative’s pattern of operations.</li>\n</ol>\n<p>All of these options can utilize a continous development (automated deployment) life cycle. </p>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "prototype",
                   "production",
                   "docker",
                   "deploy",
                   "container",
                   "ansible",
                   "VM",
                   "ISLE"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/technical-infrastructure.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/technical-infrastructure.html",
            "title": "Technical Infrastructure",
            "summary": "Drupal 8 completely supports CAS authentication [link].Islandora 8 provides several different reports out-of-the-box. From microservice stats to usage stats. There are several options and are highly configurable. Here is an example of Mark Jordan’s module that provides a collection of graphical reports on various aspects&hellip;",
            "content_html": "<ol>\n<li>Drupal 8 completely supports CAS authentication [<a href=\"https://www.drupal.org/project/cas\">link</a>].</li>\n<li>Islandora 8 provides several different reports out-of-the-box. From microservice stats to usage stats. There are several options and are highly configurable. Here is an example of Mark Jordan’s module that provides a collection of graphical reports on various aspects of an Islandora repository. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://github.com/mjordan/islandora_repository_reports/raw/master/docs/images/random_pie.png\" data-is-external-image=\"true\"  alt=\"pie chart\" /></figure> <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://github.com/mjordan/islandora_repository_reports/raw/master/docs/images/random_bar.png\" data-is-external-image=\"true\"  alt=\"bar chart\" /></figure></li>\n<li>“Supports logging of manual dashboard processes by authenticated users” <strong>I am uncertain as to what this is referring to at this time.</strong></li>\n<li>Like any other web servers, Islandora 8 can be hosted locally. The biggest benefits are leveraging the power of CPU multithreading and large memory size utilization are the most cost effective. However, self hosted hardware costs money to maintain and upgrade. Please see <a href=\"cloud-hosting-solution.html\">Cloud Hosting</a> for other options.</li>\n<li>Another option is using a cloud hosted provider like any one of the numerous options Amazon’s cloud hosting provides. Again please see <a href=\"cloud-hosting-solution.html\">Cloud Hosting</a> for cloud options.</li>\n<li>Another option to include is a decoupled headless version. This solution was recently demonstrated by Discovery Gardens. It allows for all of the management side of development to be done on the Drupal server but the frontend to be a Reactjs solution. This improves speed and allows a much more flexible frontend solution to be applied. This would allow us to develop the entire site’s frontend behavior to be implemented the same way we’ve created the digital collection’s landing page. </li>\n<li>The bare minimum to run Islandora 8 in a virtual machine (for development) is 1 CPU core with 4GB of RAM and 8GB of storage. A more comprehensive specification needs to consider applications in the stack with large needs for scalability. “Cantaloupe uses a thread-per-request model, and maintains its own thread pool to carry out certain tasks asynchronously and spread work across processors. Response times will benefit from multiple fast cores.” (Deployment, 2020) Blazegraph has a few complicated tradeoffs for RAM vs harddrive performance for ideal implementations. The configuration they suggest is a 4 core (3.5GHz) system with 16GB RAM on a pair of SSDs. For 1 billion RDF triple is 83.8GB of storage/32GB if in RAM (Bebee, 2020). In conclusion for the infrastructure, the system depends on the desired scalability and performance expected. This is a full content management system with several high performance applications.</li>\n</ol>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "infrastructure",
                   "hardware",
                   "decoupled",
                   "cloud",
                   "blazegraph",
                   "RAM",
                   "GB",
                   "CPU"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/rights-and-restrictions.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/rights-and-restrictions.html",
            "title": "Rights and Restrictions",
            "summary": "Rightsstatements.org is not specifically discussed in the documentation. Although extensive URI integration for controlled access terms is documented on the site, an assessment by the metadata librarian would give a clearer picture.Drupal is the gatekeeper for access. Although Fedora offers WebAC access control as a&hellip;",
            "content_html": "<ol>\n<li>Rightsstatements.org is not specifically discussed in the documentation. Although extensive URI integration for controlled access terms is documented on the site, an assessment by the metadata librarian would give a clearer picture.</li>\n<li>Drupal is the gatekeeper for access. Although Fedora offers WebAC access control as a solution to regulate access to Fedora resources, it was determined not to be granular enough for most of the Islandora community. WebAC only offers 4 types of access (read, write, append, and control) lack the granularity of group roles and conditional states. Drupal’s access management is far more rebust and is easier to configure. Restricting access by collection, object/node, datastreams, etc. is all managed within the Drupal UI and does not require any programming or aditional modules.</li>\n</ol>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/cloud-hosting-solution.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/cloud-hosting-solution.html",
            "title": "Cloud-hosting Solution",
            "summary": "A few solutions are available for vendors to host a solution for a fee.Able to run the stack on a cloud hosting provider like Amazon’s AWS. The demo is running on EC2 and Lightsail (an Amazon cloud solution).Price modeling on any AWS solution is complicated&hellip;",
            "content_html": "<ol>\n<li>A few solutions are available for vendors to host a solution for a fee.</li>\n<li>Able to run the stack on a cloud hosting provider like Amazon’s AWS. The demo is running on EC2 and Lightsail (an Amazon cloud solution).<ol>\n<li>Price modeling on any AWS solution is complicated and varies greatly by size and frequency of use. The task of summarizing AWS option pricing could be its own project. “In 2020, AWS comprised more than 212 services including computing, storage, networking, database, analytics, application services, deployment, management, mobile, developer tools, and tools for the Internet of Things.” [<a href=\"https://en.wikipedia.org/wiki/Amazon_Web_Services\">link</a>] </li>\n</ol>\n</li>\n<li>A few options specifically beneficial to cloud hosting include load balancing VM cluster servers (multiple identical servers) and a simple snapshot process for backing up. These can be achieved in hardware, they would require some expensive investments. Cloud hosting also makes hosting hardware unnecessary. An additional note is that some functions can be automated for either solution like scheduled backups, automated application deployment, and system monitoring. There is absolutely no mitigation of fully automated systems and application maintenance and most cloud solutions cost are prohibitively high when scaling to high numbers of CPU cores or large amounts of RAM.</li>\n<li>A few vendors are available like Discovery Garden and Born Digital offering several options; anything from migration consultation, to migrating content from 7 to 8, develop a Islandora 8 solution that meets the institution’s needs, Islandora-as-a-service and several other options. </li>\n</ol>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "vendor",
                   "server",
                   "physical",
                   "hosting",
                   "cloud"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/next-level-discoverability-solutions.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/next-level-discoverability-solutions.html",
            "title": "Next Level Discoverability Solutions",
            "summary": "A search/discoverability enhancement “Learning to Rank (LTR) is a class of techniques that apply supervised machine learning (ML) to solve ranking problems.“ [link] LTR is a query reranking Solr plugin. Another comment on this from [link] to better summarize LTR, “Learning to rank (LTR) is&hellip;",
            "content_html": "<ol>\n<li>A search/discoverability enhancement “Learning to Rank (LTR) is a class of techniques that apply supervised machine learning (ML) to solve ranking problems.“ [<a href=\"https://medium.com/@nikhilbd/intuitive-explanation-of-learning-to-rank-and-ranknet-lambdarank-and-lambdamart-fe1e17fac418\">link</a>] LTR is a query reranking Solr plugin. Another comment on this from [<a href=\"https://lucidworks.com/post/abcs-learning-to-rank/\">link</a>] to better summarize LTR, “Learning to rank (LTR) is a class of algorithmic techniques that apply supervised machine learning to solve ranking problems in search relevancy. In other words, it’s what orders query results. Done well, you have happy employees and customers; done poorly, at best you have frustrations, and worse, they will never return.” <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85176643-48621b80-b248-11ea-8060-55991e6eddcf.jpg\" data-is-external-image=\"true\"  alt=\"LTR_modeling\" /></figure></li>\n<li>Automatic Alternative Text [<a href=\"https://www.drupal.org/project/auto_alter\">link</a>] implement AI capabilities into the process <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85311654-c2caaf80-b483-11ea-905f-521f304b6535.jpg\" data-is-external-image=\"true\"  alt=\"ai\" /></figure> \n i. Detecting content\n ii. Identifying faces/geographical features in a given image\n iii. Determining the prevailing colors</li>\n<li>Oxford Common File Layout Specification (OCFL) is coming next year with the release of Fedora 6.x according to Danny Lamb and David Wilcox. This should be available within Islandora as part of upgrading Fedora to 6.x. <blockquote>\n<p>The previously mentioned disadvantages of the Fedora API may be mitigated by a relatedcommunity initiative called the Oxford Common File Layout (OCFL). The OCFL is acommunity-based effort to develop “an application-independent approach to the storage ofdigital information in a structured, transparent, and predictable manner. It is designed topromote long-term object management best practices within digital repositories.” The originalidea for this effort came from a Fedora Camp hosted at the University of Oxford in September2017, so it has roots in the Fedora community even though the OCFL is not dependent onFedora in any way. However, if Fedora were to store repository resources as specified by theOCFL, major upgrades in the future may become much easier. One of the primary motivatinguse cases of the OCFL is to reduce the need for data migrations; both because moving largeamounts of data is time-consuming and because such migrations risk data corruption and loss.The OCFL decouples the structure of files on disk from the application(s) that manage the filesby defining a file and folder hierarchy to which applications must conform. Thus, the files can beleft in place and new software applications can implement the OCFL specification in order tomanage the files. - [<a href=\"https://wiki.lyrasis.org/download/attachments/131533003/Designing%20a%20Migration%20Path%20-%20Final%20Report.pdf\">link</a>]</p>\n</blockquote>\n</li>\n</ol>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "tagging",
                   "solr",
                   "learn to rank",
                   "LTR",
                   "AI"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/metadata-and-metadata-sharing.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/metadata-and-metadata-sharing.html",
            "title": "Metadata and Metadata sharing",
            "summary": "RDF Mapping; “In Islandora, the JSON-LD Module transforms nodes (or media, or taxonomy terms) into the RDF that is synced into Fedora and the Triplestore. It uses RDF mappings, a concept defined by the RDF Module, and exposes them through the REST API” (RDF Generation,&hellip;",
            "content_html": "<ol>\n<li>RDF Mapping; “In Islandora, the JSON-LD Module transforms nodes (or media, or taxonomy terms) into the RDF that is synced into Fedora and the Triplestore. It uses RDF mappings, a concept defined by the RDF Module, and exposes them through the REST API” (RDF Generation, n.d.).<ol>\n<li>“The RDF Module is part of Drupal Core, but has no official documentation. The RDF Module embeds RDFa, a form of linked data, within the Drupal-generated HTML when you load the web page for a node, media, or taxonomy term. Official line is that this will allow Google to provide “rich snippets” such as star-ratings, contact info, and business hours.” [<a href=\"https://islandora.github.io/documentation/islandora/rdf-mapping/\">link</a>]</li>\n<li>A custom module rdfui exists, and is installed-but-not-enabled on boxes provisioned by the islandora-playbook. We don’t use it because it is very rudimentary and limited to the schema.org vocabulary. </li>\n<li>URI Mapping with persistent identifiers. With access to an API for minting persistent identifiers (e.g., DataCite, EZID, etc.).  <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://github.com/mjordan/persistent_identifiers/raw/master/docs/images/mint_checkbox.png\" data-is-external-image=\"true\"  alt=\"mint persistent_identifiers\" /></figure> [<a href=\"https://github.com/mjordan/persistent_identifiers\">link</a>]</li>\n<li>The Dupal Schema.org Dataset module recently updated to extend the schema.org metatag module to support schema.org dataset spec. “DOI minting is part of UPEI’s publication workflow, where the system only registers the dataset with Datacite when a curator user ‘publishes’ the dataset, making it public. At that point it sends an XML version of the node fields content to Dataset’s API” [paraphrased from Alexander O’Neill from UPEI via slack chat] <a href=\"https://www.drupal.org/project/schema_dataset\">https://www.drupal.org/project/schema_dataset</a></li>\n</ol>\n</li>\n<li>Migrating metadata (even complex metadata) is a simple process. In controlled_access_terms, we have an understanding of a typed_relation, which is an entity reference coupled with a MARC relator. The migration script expects an associative array that looks like this: <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85176275-7430d180-b247-11ea-9841-a5086a7ea3f7.png\" data-is-external-image=\"true\"  alt=\"associative_array\" /></figure></li>\n</ol>\n<p>This is an example of the JSON output for an imported value. To see any entity’s json value add <code>_?_format=json_</code> at the end of the URL of the entity. <code>_jsonld_</code> will work as well to get the jsonld values as well. Example, <em><a href=\"http://localhost:8000/taxonomy/term/339?_format=json\">http://localhost:8000/taxonomy/term/339?_format=json</a></em> \n<figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85176333-99bddb00-b247-11ea-8ac7-77573747ae3f.png\" data-is-external-image=\"true\"  alt=\"example_json\" /></figure></p>\n<ol start=\"5\">\n<li>Although not absolutely essential it is my understanding that taxonomy vocabulary to categorized metadata should be migrated as entities first before the Islandora 7 objects and their metadata. Generating taxonomy from within a node’s migration is limited. For instance, a Subject’s authority has a title, associated authority and a URI. Automatically generating the subject from within the node migration limits to only the title. Whereas a separate migration allows for all 3 fields to be imported and referenced. Here is the list of taxonomy vocabulary list of “_categories_” of metadata.<ol>\n<li><strong>Corporate Body,</strong> an organization or group of persons that is identified by a particular name</li>\n<li><strong>Family,</strong> two or more who present themselves as a family</li>\n<li><strong>Genre</strong>,  a category characterizing a particular style</li>\n<li><strong>Geographic Location</strong>, Geographic area</li>\n<li><strong>Islandora access</strong>, Terms used to limit, restrict or coordinate access</li>\n<li><strong>Person</strong>, an individual of the human species.</li>\n<li><strong>Subject</strong>, topics, events, people, and organizations.</li>\n</ol>\n</li>\n</ol>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "taxonomy",
                   "subject",
                   "sharing",
                   "mapping",
                   "linked data",
                   "genre",
                   "Schema",
                   "RDFa",
                   "RDF",
                   "JSON-LD",
                   "JSON",
                   "API"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/preservation.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/preservation.html",
            "title": "Preservation",
            "summary": "Islandora 8 utilizes Harvard’s File Information Tool Set (FITS), Fixity auditing, bag exporting, and preservation reporting for preservation (Jordan, 2019).Leverages Fedora 5 as the preservation layer. According to SFU’s Library DPF Action Plan in the following snippet [link]Supports versioning of binaries within an object. Islandora&hellip;",
            "content_html": "<ol>\n<li>Islandora 8 utilizes Harvard’s File Information Tool Set (FITS), Fixity auditing, bag exporting, and preservation reporting for preservation (Jordan, 2019).</li>\n<li>Leverages Fedora 5 as the preservation layer. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85175851-6890db00-b246-11ea-92f2-afec89a71145.png\" data-is-external-image=\"true\"  alt=\"sfu_doc\" /></figure> According to SFU’s Library DPF Action Plan in the following snippet [link]</li>\n<li>Supports versioning of binaries within an object. Islandora processes all objects as binary objects into Fedora. <pre><code>   a. The migration process currently does not support migrating old versions of an object. This can be done but will take some custom processing.</code></pre></li>\n<li>Islandora 8 leverages PCDM classes for means to keep the preservation file system layer oganized. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/5439169/58195794-a6a38000-7c7d-11e9-8050-7b7a6817bd9d.png\" data-is-external-image=\"true\"  alt=\"Islandora Object in Drupal and Fedora as original file\" /></figure></li>\n</ol>\n",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/uploading-ingesting-and-migration.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/uploading-ingesting-and-migration.html",
            "title": "Uploading, ingesting, and migration",
            "summary": "Supports migration of objects and their associated datastreams from the Fedora 3 instance to Islandora 8. There are a couple of prebuilt solutions including a process that utilizes a Solr query and preconfigured mappings to achieve a full migration. Another technique utilizes the Drupal 8&hellip;",
            "content_html": "<ol>\n<li>Supports migration of objects and their associated datastreams from the Fedora 3 instance to Islandora 8. There are a couple of prebuilt solutions including a process that utilizes a Solr query and preconfigured mappings to achieve a full migration. Another technique utilizes the Drupal 8 module “Migrate Islandora CSV” (Lamb, 2019). As the title suggests this module utilizes a CSV file to migrate and can be generated via the Islandora 7x module “Islandora Get CSV” (Jordan, 2020).  </li>\n<li>Islandora a few options for migrating from Islandora 7. There are 2 core migration options that Islandora supports directly; Islandora CSV migration and the migrate 7x claw (a fedora to fedora option). Another option developed was the Islandora workbench. \n  a. Islandora CSV is the preferred option for it’s simplicity. All of the migration processes in this option are both iterable and reversible. If changes need to be made to the object or it’s metadata the changes can be either updated or rolled back. This is an extremely important fact. This allows for the migration of collections of objects to be migrated with only minimal mappings (if needed). This means all RDF mapping doesn’t have to be complete to migrate the entire collection. RDF is not a flat MODS file that references some URIs. This is a problem with MODS. If a URI was to change, every MODS file must be updated to reflect the new destination. In RDF, the URI is stored and referenced as an entity and not statically in a metadata file. It’s ideal to separate out any value that will be an entity; a subject, person, place, corporation, event, etc. Regardless of the entity type the process of migration includes 3 basic steps; download the source, process it and then save it. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85171208-8d805080-b23c-11ea-8e7a-f5638be0ca3f.png\" data-is-external-image=\"true\"  alt=\"ETL Process\" /></figure>\n  b. Islandora’s <strong><a href=\"https://github.com/Islandora-Devops/migrate_7x_claw\">migrate_7x_claw</a></strong> module is a Drupal 8 Migrate Plus migration that  pulls content directly from an Islandora 7.x Solr/Fedora server. This module assumes all PIDs are indexed in Solr.<pre><code>         - Currently, the following content models can be migrated over with full functionality:\n             * Collection\n             * Basic Image\n             * Large Image\n             * Audio\n             * Video\n             * PDF\n             * Binary</code></pre>  c. Supports batch ingest of objects through the Islandora Workbench repository (Jordan, 2020). This app utilizes a CSV file to import the content (objects), the base fields, and can generate new taxonomy terms when configured to do so.</li>\n<li>Supports ingesting objects via webforms. This is a basic fundamental functionality of Drupal 8 that Islandora leverages for all types of UI ingests and modification.</li>\n<li>Supports uploading objects via a form and having that object approved and published by another user. This mediated process is done through a standard Drupal concept called an editorial workflow. This process is for an organization that utilizes several workflows such as create, edit, review, and publish and would like to restrict access to those workflows based on roles. A full breakdown of how this is accomplished can be located at Drupal’s Editorial Workflow page (Lakatos &amp; Hodgdon, 2019).</li>\n<li>Supports self and mediated deposit. This process is identical to the previous comments on mediated workflows with the only difference being that for a self published deposit, the user should be granted the corresponding roles needed to accomplish the task. </li>\n<li>Supports uploading any binary file type. Islandora 8 treats all repository items as a binary content type. Binary files are treated the same as any other content type, a model tag is applied to an object/node indicating to Drupal which context(s) to use resulting in corresponding actions to be fired.</li>\n</ol>\n",
            "image": "https://donrichards.github.io/migrate_islandora_csv/media/posts/7/migration-middle-format-process.jpg",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "upload",
                   "migration",
                   "ingest",
                   "entity",
                   "RDF",
                   "MODS",
                   "CSV"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/other-content-types.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/other-content-types.html",
            "title": "Other Content Types",
            "summary": "Drupal 8 allows for the content types to be added quickly through the admin console. Acceptable file formats, microservice behavior and ontology can all be assigned through the creation of a custon contenttype.Supports deposit and organization of existing objects into “compound” objects through Drupal’s contributed&hellip;",
            "content_html": "<p>Drupal 8 allows for the content types to be added quickly through the admin console. Acceptable file formats, microservice behavior and ontology can all be assigned  through the creation of a custon contenttype.</p>\n<ol>\n<li>Supports deposit and organization of existing objects into “compound” objects through Drupal’s contributed module Webforms. The manner in which Islandora 8 processes all repository objects is similar to Islandora 7 ingesting a binary cmodel object with a Full MODS form. Examples of “compound” objects are objects from the Postcards from the Great Smoky Mountains &amp; Virginia P. Moore Scrap Book collections.</li>\n<li>Supports the deposit and presentation of PDF objects. PDFs with written text can be utilized to provide searching capabilities on the content of a book or document. Ghostscript can be used on text based PDFs. Images require an OCR utility like Tesseract to extract text. This is built into the default Islandora configuration.</li>\n<li>Supports the deposit and presentation of audio objects. Most of the functionality specific to audio is carried out by Drupal modules. Audio transcript editing/display, playback, and thumbnail generation of the audio’s waveform are all Drupal core and contributed features.</li>\n<li>Supports the deposit and presentation of video objects. Most of the functionality specific to video is carried out by Drupal modules. Video transcript editing/display, thumbnail generation and playback are all Drupal core and contributed features. An Islandora 8 code submission is pending approval for transcripts (Manimjs_drupal, 2020) and an oral history step by step instruction as proof of concept is available (Shaw, 2019).</li>\n<li>Supports the deposit and presentation of oral history objects. The only discernible difference between audio/video objects and oral history objects is the presence of transcripts, transcripts are already part of the audio/video features indicating this is completely covered as well. </li>\n</ol>\n",
            "image": "https://donrichards.github.io/migrate_islandora_csv/media/posts/6/Screen-Shot-2020-06-19-at-2.44.27-PM.png",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "video",
                   "transcript",
                   "postcard",
                   "other",
                   "oral history",
                   "derivative",
                   "custom",
                   "content type",
                   "content model",
                   "Virginia",
                   "PDF",
                   "Moore"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        },
        {
            "id": "https://donrichards.github.io/migrate_islandora_csv/images-books-and-pages.html",
            "url": "https://donrichards.github.io/migrate_islandora_csv/images-books-and-pages.html",
            "title": "Images, Books, and Pages",
            "summary": "A suite of microservices (Crayfish) are initiated during the process of ingesting an object, which maps resources to Fedora and generates derivative files among other things. Unlike previous versions of Islandora, version 8 asynchronously manages and queues these microservices for scalability, stability, and speed. Specifically&hellip;",
            "content_html": "<p>A suite of microservices (Crayfish) are initiated during the process of ingesting an object, which maps resources to Fedora and generates derivative files among other things. Unlike previous versions of Islandora, version 8 asynchronously manages and queues these microservices for scalability, stability, and speed. Specifically some of these microservices generate derivatives like thumbnails, browser sized images, and OCR. The system defaults come with OpenSeadragon with an IIIF image server. The viewer can be switched to Mirador or Universal Viewer with a relatively small amount of code (Zoller, 2019).</p>\n<p><figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85142859-f5bc3b80-b216-11ea-970a-86c91f02a527.jpeg\" data-is-external-image=\"true\"  alt=\"mirador_example\" /></figure></p>\n<ol>\n<li>Supports the deposit and characterization of preservation-quality large image (TIFs &amp; JP2s). This process creates derivatives including but not limited to technical metadata generation and other access media for browser consumption.</li>\n<li>Supports the deposit of books with preservation-quality large images as pages. Most objects in Islandora are treated like paged objects to begin with so there is little difference between a page versus a large image. The difference is the microservices that are triggered and how that changes the behavior of the viewer.</li>\n<li>Automates the generation of access copies and other derivatives when an object is ingested and/or modified. This includes but is not limited to lower resolution media for browsers and thumbnail image generation for small &amp; large images, video and audio files (Waveform generation from original audio file for thumbnail generation).</li>\n<li>Serves high quality access derivatives with image-zooming capability via a viewer (OpenSeaDragon, Mirador, or Universal Viewer). The default image viewer is Open Seadragon. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85144983-e8ed1700-b219-11ea-8cec-6558ff985901.jpg\" data-is-external-image=\"true\"  alt=\"seadragon-zoomed\" /></figure></li>\n<li>Renders images with a IIIF image server.</li>\n<li>Automating the generation of the OCR microform is taken care of through Hypercube/Tesseract microservice. Tesseract is fully capable but it’s unclear how to configure Drupal to export hOCR. This may be user error and not a limitation of the stack.</li>\n<li>Allows for bulk uploads from the admin console. <figure class=\"post__image\"><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/2738244/85143458-c659fe80-b217-11ea-90dd-f6f583c4c30e.png\" data-is-external-image=\"true\"  alt=\"bulk uploader\" /></figure></li>\n</ol>\n",
            "image": "https://donrichards.github.io/migrate_islandora_csv/media/posts/5/CONTENT-MODELING-DRUPAL8.jpg",
            "author": {
                "name": "Don Richards"
            },
            "tags": [
                   "viewer",
                   "paged",
                   "modeling",
                   "derivative",
                   "content model",
                   "book",
                   "Universal viewer",
                   "OCR",
                   "Mirador",
                   "BigData"
            ],
            "date_published": "2020-06-23T08:35:13-04:00",
            "date_modified": "2020-06-23T08:35:13-04:00"
        }
    ]
}
